#variables
uniform int in_no_lights;

const int no_lights = 10;

uniform sampler2D lightMap;

uniform float shadow_quality;

uniform bool use_spec;
uniform bool spec_a_base;
uniform bool spec_a_normal;
uniform vec3 in_speccolor;
uniform float in_specexp;

struct Light
{
    bool active;
    vec3 position;
	vec3 direction;
    vec3 color;
	mat4 view_matrix;
	bool texture;
};

struct SunLight
{
    bool active;
	vec3 direction;
    vec3 color;
	mat4 view_matrix;
	mat4 inner_view_matrix;
};

uniform Light lightStructs[no_lights];
uniform SunLight sunLightStruct;

in vec4 v_s_map_pos[no_lights];

in vec4 v_sun_map_pos;
in vec4 v_inner_sun_map_pos;

uniform float sunradius = 0.001;

#functions

#code
	vec4 light = texture(lightMap,screenposition);
	vec3 all_lights = light.rgb;
	vec3 all_spec = light.rgb*light.a;
